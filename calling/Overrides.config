# This line is required. It pulls in default overrides from the embedded cromwell `application.conf` needed for proper
# performance of cromwell.
#include required("application")
include required(classpath("application"))

system { 
  akka {
    logger-startup-timeout = 60s
  }

  input-read-limits {
  lines = 128000000
  }

  job-rate-control {
    jobs = 5
    per = 1 second
  }	
  # If 'true' then when Cromwell starts up, it tries to restart incomplete workflows
  #workflow-restart = true
  # Max number of retries per job that the engine will attempt in case of a retryable failure received from the backend
  max-retries = 50
  # Number of seconds between workflow launches
  new-workflow-poll-rate = 60
  max-workflow-launch-count = 1
  io {
  # Global Throttling - This is mostly useful for GCS and can be adjusted to match
  # the quota availble on the GCS API
  #number-of-requests = 100000
  #per = 100 seconds

  # Number of times an I/O operation should be attempted before giving up and failing it.
  number-of-attempts = 10
  }
}

services {
  LoadController {
    config {
      control-frequency = 5 seconds
    }
  }

  HealthMonitor {
    config {
      # How long to wait between status check sweeps
      # check-refresh-time = 5 minutes
      # For any given status check, how long to wait before assuming failure
      # check-timeout = 1 minute
      # For any given status datum, the maximum time a value will be kept before reverting back to "Unknown"
      # status-ttl = 15 minutes
      # For any given status check, how many times to retry a failure before setting status to failed. Note this
      # is the number of retries before declaring failure, not the total number of tries which is 1 more than
      # the number of retries.
      check-failure-retry-count = 25
      # For any given status check, how long to wait between failure retries.
      check-failure-retry-interval = 30 seconds
    }
  }
}

backend {
  # Override the default backend.
  default = "SLURM"

  # The list of providers.
  providers {

    SLURM {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {        
        filesystems {
                local {
                        caching.duplication-strategy = ["copy"]
                        localization: [
                                "soft-link", "cached-copy", "copy", "hard-link"
                        ]
                }
        }
	concurrent-job-limit = 250
        script-epilogue = ""
        exit-code-timeout-seconds = 120

	runtime-attributes = """
       	String runtime_minutes = "!@#$"
       	Int cpus = 1
        String requested_memory_mb_per_core = "%^&*"
        String queue = "medium"
        String account_name = "park_contrib"
        """

        submit = """
            sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \
            ${"-n " + cpus} ${"--mail-user=victor_mao@hms.harvard.edu"} \
            --mem-per-cpu=${requested_memory_mb_per_core} \
            --wrap "/bin/bash ${script}"
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "Submitted batch job (\\d+).*"
      }
    }

  }
}
